{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyN7bUSGqQTymavzeqQH32kz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RenataAndradeSnatana/Meu-Primeiro-projeto-de-An-lise-de-dados-com-Python-e-Pandas1/blob/main/Projeto%20de%20An%C3%A1lise%20de%20Dados\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X3mxtAMqGXyW"
      },
      "source": [
        "#Importação das bibliotecas:\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt #Para customizar os gráficos\n",
        "plt.style.use(\"seaborn\") # Estilo que  será utilizado é o seaborn. Seaborn é uma biblioteca de visualização de dados Python baseada em matplotlib."
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 109
        },
        "id": "vM-dF1k1Ivbh",
        "outputId": "bc03b34a-0129-44d2-840f-1667ec32722c"
      },
      "source": [
        "#Importando o arquivo:\n",
        "from google.colab import files\n",
        "arq = files.upload () #Foi criado a variável arq que vai receber o files.upload"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-b243512e-25a2-4751-99fe-0e95aefad3d9\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-b243512e-25a2-4751-99fe-0e95aefad3d9\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "text": [
            "Saving PLANILHA DE DENGUE ATUALIZADA 2021_SE_32_Banco_coordenação.xls to PLANILHA DE DENGUE ATUALIZADA 2021_SE_32_Banco_coordenação.xls\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lPLkSrvyPusR"
      },
      "source": [
        "#Criando DataFrame:\n",
        "df = pd.read_excel(\"PLANILHA DE DENGUE ATUALIZADA 2021_SE_32_Banco_coordenação.xls\")"
      ],
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "M4HEZMzyP-hq",
        "outputId": "87a50d00-548c-467b-bc4b-36c9f4a38441"
      },
      "source": [
        "#Visualizando as 8 primeiras linhas:\n",
        "df.head(8)"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2021-03-20</td>\n",
              "      <td>11</td>\n",
              "      <td>UPAO</td>\n",
              "      <td>TABAJARA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF TABAJARA I</td>\n",
              "      <td>M</td>\n",
              "      <td>48.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>ALTO DA BONDADE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF ALTO DA BONDADE I</td>\n",
              "      <td>M</td>\n",
              "      <td>51.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>ESF AMARO BRANCO</td>\n",
              "      <td>AMARO BRANCO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF AMARO BRANCO</td>\n",
              "      <td>F</td>\n",
              "      <td>64.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>HSE</td>\n",
              "      <td>JARDIM ATLANTICO</td>\n",
              "      <td>212</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF CAIXA D'ÁGUA I</td>\n",
              "      <td>F</td>\n",
              "      <td>35.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2021-01-25</td>\n",
              "      <td>4</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>PASSARINHO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF PASSARINHO</td>\n",
              "      <td>F</td>\n",
              "      <td>30.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>2021-05-30</td>\n",
              "      <td>22</td>\n",
              "      <td>HELENA MOURA</td>\n",
              "      <td>SAPUCAIA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF SAPUCAIA I</td>\n",
              "      <td>F</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>2021-05-30</td>\n",
              "      <td>22</td>\n",
              "      <td>UPAO</td>\n",
              "      <td>TABAJARA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF TABAJARA I</td>\n",
              "      <td>F</td>\n",
              "      <td>37.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>2021-06-07</td>\n",
              "      <td>23</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>JARDIM BRASIL II</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF JARDIM BRASIL II</td>\n",
              "      <td>M</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Nº DATA SINAIS E SINTOMAS  SE  ... IDADE NOTIFICADOS Unnamed: 11\n",
              "0   1             2021-03-20  11  ...  48.0           1         NaN\n",
              "1   2             2021-06-01  22  ...  51.0           1         NaN\n",
              "2   3             2021-06-01  22  ...  64.0           1         NaN\n",
              "3   4             2021-06-01  22  ...  35.0           1         NaN\n",
              "4   5             2021-01-25   4  ...  30.0           1         NaN\n",
              "5   6             2021-05-30  22  ...   5.0           1         NaN\n",
              "6   7             2021-05-30  22  ...  37.0           1         NaN\n",
              "7   8             2021-06-07  23  ...   6.0           1         NaN\n",
              "\n",
              "[8 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ec1OOca1R7D7",
        "outputId": "08923b07-7fd7-4cd0-d9b1-51b3f92fb772"
      },
      "source": [
        "#Quantidade de linhas e colunas:\n",
        "df.shape"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1613, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Acklm6HMSSgX",
        "outputId": "7c111551-8302-4ec1-d966-e3fa3b99b131"
      },
      "source": [
        "#Tipos de dados de cada coluna:\n",
        "df.dtypes"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Nº                                 int64\n",
              "DATA SINAIS E SINTOMAS    datetime64[ns]\n",
              "SE                                 int64\n",
              "UNIDADE NOTIFICADORA              object\n",
              "BAIRRO                            object\n",
              "NU_NUMERO                         object\n",
              "ÁREA CCOBERTA POR USF             object\n",
              "SE SIM, QUAL USF?                 object\n",
              "SEXO                              object\n",
              "IDADE                            float64\n",
              "NOTIFICADOS                        int64\n",
              "Unnamed: 11                       object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EZ21Eb4aTqqo",
        "outputId": "dffa2162-ff66-4004-877e-bba7bc349352"
      },
      "source": [
        "#total de notificados com Dengue:\n",
        "df['NOTIFICADOS'].sum()"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1613"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U63xEjGohK-l",
        "outputId": "db4f0c3b-dad4-40a4-b9bf-a6df25edcfa2"
      },
      "source": [
        "#Objetivo agora é saber quantas pessoas foram notificadas por mês, ou seja, agrupamento por mês:\n",
        "df.groupby(df[\"DATA SINAIS E SINTOMAS\"].dt.month)[\"NOTIFICADOS\"].sum()"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DATA SINAIS E SINTOMAS\n",
              "1     55\n",
              "2     47\n",
              "3     52\n",
              "4    125\n",
              "5    584\n",
              "6    505\n",
              "7    228\n",
              "8     17\n",
              "Name: NOTIFICADOS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "6PuuCGpfx2LC",
        "outputId": "6aeedf25-d009-44d5-84f9-e02d05ab1ee3"
      },
      "source": [
        "#Histograma de casos notificados por mês:\n",
        "plt.hist(df[\"DATA SINAIS E SINTOMAS\"], color=\"green\");"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c6E8kP0pAsCG",
        "outputId": "c6d6ddac-ff17-4145-ee19-8cb4823f542e"
      },
      "source": [
        "#Objetivo agora é saber quantas pessoas foram notificadas por bairro, ou seja, agrupamento por mês:\n",
        "df.groupby(df[\"BAIRRO \"])[\"NOTIFICADOS\"].sum()"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BAIRRO \n",
              "7° RO                                                                  3\n",
              "AGUAZINHA                                                             56\n",
              "ALTO DA BONDADE                                                       33\n",
              "ALTO DA CONQUISTA                                                     17\n",
              "ALTO DA MINA                                                           3\n",
              "ALTO DA NAÇÃO                                                          4\n",
              "ALTO DO SOL NASCENTE                                                   8\n",
              "ALTO JARDIM CONQUISTA                                                  1\n",
              "ALTO NOVA OLINDA                                                       2\n",
              "ALTO SOL NASCENTE                                                      2\n",
              "AMARO BRANCO                                                          18\n",
              "BAIRRO NOVO                                                           40\n",
              "BOM SUCESSO                                                            1\n",
              "BONSUCESSO                                                            15\n",
              "BULTRINS                                                              40\n",
              "CAIXA D' ÁGUA                                                         66\n",
              "CARMO                                                                  4\n",
              "CASA CAIADA                                                           27\n",
              "CIDADE TABAJARA                                                       40\n",
              "FRAGOSO                                                               10\n",
              "GUADALUPE                                                             10\n",
              "JARDIM ATLANTICO                                                      71\n",
              "JARDIM BRASIL                                                         63\n",
              "JARDIM BRASIL I                                                        6\n",
              "JARDIM BRASIL II                                                      18\n",
              "JARDIM FRAGOSO                                                        83\n",
              "JARDIN RIO DOCE                                                        6\n",
              "JATOBÁ                                                                12\n",
              "MARANGUAPE                                                             1\n",
              "MIRUEIRA                                                               1\n",
              "MONTE                                                                  9\n",
              "MONTEIRO                                                               1\n",
              "OLINDA                                                                 6\n",
              "OURO PRETO                                                           114\n",
              "PASSARINHO                                                            63\n",
              "PEIXINHOS                                                            221\n",
              "RIO DOCE                                                              62\n",
              "RIO DOCE - BAIRRO                                                      1\n",
              "RIO DOCE I ETAPA                                                      16\n",
              "RIO DOCE III ETAPA                                                     2\n",
              "RIO DOCE IV ETAPA                                                      2\n",
              "RIO DOCE V ETAPA                                                       3\n",
              "RUA ASSUNCAO                                                           1\n",
              "RUA CORONEL JOAO                                                       1\n",
              "SALGADINHO                                                            47\n",
              "SAN MARTIN                                                             1\n",
              "SANTA CASA                                                             1\n",
              "SANTA TEREZA                                                          17\n",
              "SANTO AMARO                                                            1\n",
              "SAPUCAIA                                                              62\n",
              "SAPUCAIA  DE DENTRO                                                    1\n",
              "SITIO NOVO                                                            25\n",
              "SÃO BENEDITO                                                          18\n",
              "TABAJARA                                                              36\n",
              "VARADOURO                                                             14\n",
              "VILA POPULAR                                                          27\n",
              "VILA SAO BENTO                                                         1\n",
              "ÁGUAS COMPRIDAS                                                      122\n",
              "Name: NOTIFICADOS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_RSL2yE2BmWI",
        "outputId": "01b0bdf0-934f-42f8-e0e5-88563fe74f02"
      },
      "source": [
        "#Os 10 bairros mais notificados:\n",
        "df.groupby(df[\"BAIRRO \"])[\"NOTIFICADOS\"].sum().sort_values(ascending=False).head(10)"
      ],
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BAIRRO \n",
              "PEIXINHOS           221\n",
              "ÁGUAS COMPRIDAS     122\n",
              "OURO PRETO          114\n",
              "JARDIM FRAGOSO       83\n",
              "0                    77\n",
              "JARDIM ATLANTICO     71\n",
              "CAIXA D' ÁGUA        66\n",
              "JARDIM BRASIL        63\n",
              "PASSARINHO           63\n",
              "SAPUCAIA             62\n",
              "Name: NOTIFICADOS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "PHa8Tu7KsHr-",
        "outputId": "e75b2a24-ad3e-4571-a20b-7669caf414c2"
      },
      "source": [
        "df.groupby(df[\"BAIRRO \"])[\"NOTIFICADOS\"].sum().sort_values(ascending=False).head(10).plot.barh(title = \"10 bairros mais notificados:\" )"
      ],
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fda92cfb8d0>"
            ]
          },
          "metadata": {},
          "execution_count": 137
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ikRuMsI76M90",
        "outputId": "30a79234-83e0-4423-d40d-38a9afe899fc"
      },
      "source": [
        "#Data mais antiga:\n",
        "df[\"DATA SINAIS E SINTOMAS\"].min()"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Timestamp('2021-01-01 00:00:00')"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cugSokm_6zTA"
      },
      "source": [
        "df[\"Diferença_Dias\"] = df[\"DATA SINAIS E SINTOMAS\"] - df[\"DATA SINAIS E SINTOMAS\"].min()"
      ],
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "id": "sJU5tMW376Rs",
        "outputId": "337425a8-bd51-471b-b36d-7c32e3e8f3a4"
      },
      "source": [
        "df.sample(6)"
      ],
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "      <th>Mês</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1438</th>\n",
              "      <td>1449</td>\n",
              "      <td>2021-05-05</td>\n",
              "      <td>18</td>\n",
              "      <td>OSWALDO CRUZ</td>\n",
              "      <td>RIO DOCE</td>\n",
              "      <td>20</td>\n",
              "      <td>NÃO</td>\n",
              "      <td>NÃO SE APLICA</td>\n",
              "      <td>F</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>124 days</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1490</th>\n",
              "      <td>1501</td>\n",
              "      <td>2021-07-09</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>AGUAZINHA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>189 days</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>885</th>\n",
              "      <td>890</td>\n",
              "      <td>2021-06-12</td>\n",
              "      <td>23</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>ALTO DA CONQUISTA</td>\n",
              "      <td>77</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF ALTO DA COQUISTA</td>\n",
              "      <td>F</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>162 days</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>252</th>\n",
              "      <td>253</td>\n",
              "      <td>2021-05-05</td>\n",
              "      <td>18</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>BULTRINS</td>\n",
              "      <td>0</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF BULTRINS</td>\n",
              "      <td>M</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>124 days</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>50</td>\n",
              "      <td>2021-01-28</td>\n",
              "      <td>4</td>\n",
              "      <td>AMAURY COUTINHO</td>\n",
              "      <td>PEIXINHOS</td>\n",
              "      <td>0</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF COHAB/PEIXINHOS II</td>\n",
              "      <td>M</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27 days</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>733</th>\n",
              "      <td>735</td>\n",
              "      <td>2021-06-17</td>\n",
              "      <td>24</td>\n",
              "      <td>SANTECORP/SP</td>\n",
              "      <td>JARDIM ATLANTICO</td>\n",
              "      <td>27</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF JARDIM ATLANTICO</td>\n",
              "      <td>F</td>\n",
              "      <td>52.105556</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>167 days</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Nº DATA SINAIS E SINTOMAS  ...  Trimestre_Notificados Mês\n",
              "1438  1449             2021-05-05  ...                      2   5\n",
              "1490  1501             2021-07-09  ...                      3   7\n",
              "885    890             2021-06-12  ...                      2   6\n",
              "252    253             2021-05-05  ...                      2   5\n",
              "49      50             2021-01-28  ...                      1   1\n",
              "733    735             2021-06-17  ...                      2   6\n",
              "\n",
              "[6 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rKDO8-osw78f"
      },
      "source": [
        "plt.style.use(\"ggplot\")"
      ],
      "execution_count": 155,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 315
        },
        "id": "s5GS2-NJxaid",
        "outputId": "42eabeba-d24b-4e41-9234-e4b36a51cdef"
      },
      "source": [
        "#Diferença de dias para o primeiro dia notificado:\n",
        "df.groupby(\"Diferença_Dias\")[\"NOTIFICADOS\"].sum().sort_values(ascending=False).head(10).plot.barh(title = \"Diferenças de dias de um caso para outro\" )\n",
        "plt.xlabel(\"NOTIFICADOS\")\n",
        "plt.ylabel(\"Diferença de dias\")"
      ],
      "execution_count": 158,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Diferença de dias')"
            ]
          },
          "metadata": {},
          "execution_count": 158
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LJVnUG3nAX1S"
      },
      "source": [
        "#Criando a coluna Trimestral:\n",
        "df[\"Trimestre_Notificados\"] = df[\"DATA SINAIS E SINTOMAS\"].dt.quarter\n"
      ],
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "id": "hVOeX9cvDsav",
        "outputId": "5cc9f189-e6e2-412e-b828-940ec9483df8"
      },
      "source": [
        "df.sample(6)"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1060</th>\n",
              "      <td>1067</td>\n",
              "      <td>2021-06-27</td>\n",
              "      <td>26</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PEIXINHOS</td>\n",
              "      <td>79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>4.258333</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>177 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>861</th>\n",
              "      <td>866</td>\n",
              "      <td>2021-06-14</td>\n",
              "      <td>24</td>\n",
              "      <td>AMAURY COUTINHO</td>\n",
              "      <td>PEIXINHOS</td>\n",
              "      <td>55</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF COHAB/PEIXINHOS II</td>\n",
              "      <td>F</td>\n",
              "      <td>29.675000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>164 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1085</th>\n",
              "      <td>1092</td>\n",
              "      <td>2021-05-17</td>\n",
              "      <td>20</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PASSARINHO</td>\n",
              "      <td>242</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>47.741667</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>136 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1035</th>\n",
              "      <td>1042</td>\n",
              "      <td>2021-05-23</td>\n",
              "      <td>21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>JARDIM BRASIL</td>\n",
              "      <td>70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>41.761111</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>142 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>598</th>\n",
              "      <td>600</td>\n",
              "      <td>2021-06-04</td>\n",
              "      <td>22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>JARDIM ATLANTICO</td>\n",
              "      <td>618</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>F</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>154 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>143</td>\n",
              "      <td>2021-04-03</td>\n",
              "      <td>13</td>\n",
              "      <td>UPAO</td>\n",
              "      <td>ALTO SOL NASCENTE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Nº DATA SINAIS E SINTOMAS  ...  Diferença_Dias Trimestre_Notificados\n",
              "1060  1067             2021-06-27  ...        177 days                     2\n",
              "861    866             2021-06-14  ...        164 days                     2\n",
              "1085  1092             2021-05-17  ...        136 days                     2\n",
              "1035  1042             2021-05-23  ...        142 days                     2\n",
              "598    600             2021-06-04  ...        154 days                     2\n",
              "142    143             2021-04-03  ...         92 days                     2\n",
              "\n",
              "[6 rows x 14 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "Nufb5hNetMDa",
        "outputId": "fd73e39d-ea0d-42a7-e1af-9214cfba1fd0"
      },
      "source": [
        "#Casos trismestrais Notificados por Bairro:\n",
        "df.groupby(\"BAIRRO \")[\"Trimestre_Notificados\"].sum().sort_values(ascending=False).head(10).plot.pie(title = 'Notificados por Bairro' )"
      ],
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fda92195e10>"
            ]
          },
          "metadata": {},
          "execution_count": 166
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "OmJCDvqXA2nL",
        "outputId": "8fc9136f-ad87-42b8-c725-74e0e4c95147"
      },
      "source": [
        "#Outra representação gráfica dos Casos trismestrais Notificados por Bairro:\n",
        "df.groupby(\"BAIRRO \")[\"Trimestre_Notificados\"].sum().sort_values(ascending=False).head(10).plot()\n",
        "plt.xlabel(\"BAIRRO \")\n",
        "plt.ylabel(\"Trimestre_Notificados\");\n",
        "plt.legend()"
      ],
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fda91ececd0>"
            ]
          },
          "metadata": {},
          "execution_count": 174
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tC32HoG4HsD7"
      },
      "source": [
        "#Filtrando os casos de 2021:\n",
        "casos_2021 = df.loc[(df[\"DATA SINAIS E SINTOMAS\"].dt.year == 2021)]"
      ],
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 623
        },
        "id": "0wV91KZKLQfo",
        "outputId": "5c26f42f-9ce6-49c6-c239-0fa8b99ef64b"
      },
      "source": [
        "casos_2021"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2021-03-20</td>\n",
              "      <td>11</td>\n",
              "      <td>UPAO</td>\n",
              "      <td>TABAJARA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF TABAJARA I</td>\n",
              "      <td>M</td>\n",
              "      <td>48.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78 days</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>ALTO DA BONDADE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF ALTO DA BONDADE I</td>\n",
              "      <td>M</td>\n",
              "      <td>51.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>151 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>ESF AMARO BRANCO</td>\n",
              "      <td>AMARO BRANCO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF AMARO BRANCO</td>\n",
              "      <td>F</td>\n",
              "      <td>64.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>151 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>HSE</td>\n",
              "      <td>JARDIM ATLANTICO</td>\n",
              "      <td>212</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF CAIXA D'ÁGUA I</td>\n",
              "      <td>F</td>\n",
              "      <td>35.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>151 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2021-01-25</td>\n",
              "      <td>4</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>PASSARINHO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF PASSARINHO</td>\n",
              "      <td>F</td>\n",
              "      <td>30.0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24 days</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1608</th>\n",
              "      <td>1620</td>\n",
              "      <td>2021-05-05</td>\n",
              "      <td>18</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>124 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1609</th>\n",
              "      <td>1621</td>\n",
              "      <td>2021-08-07</td>\n",
              "      <td>31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>218 days</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1610</th>\n",
              "      <td>1622</td>\n",
              "      <td>2021-07-29</td>\n",
              "      <td>30</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>209 days</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1611</th>\n",
              "      <td>1623</td>\n",
              "      <td>2021-07-31</td>\n",
              "      <td>30</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>211 days</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1612</th>\n",
              "      <td>1624</td>\n",
              "      <td>2021-08-11</td>\n",
              "      <td>32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>222 days</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1613 rows × 14 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Nº DATA SINAIS E SINTOMAS  ...  Diferença_Dias Trimestre_Notificados\n",
              "0        1             2021-03-20  ...         78 days                     1\n",
              "1        2             2021-06-01  ...        151 days                     2\n",
              "2        3             2021-06-01  ...        151 days                     2\n",
              "3        4             2021-06-01  ...        151 days                     2\n",
              "4        5             2021-01-25  ...         24 days                     1\n",
              "...    ...                    ...  ...             ...                   ...\n",
              "1608  1620             2021-05-05  ...        124 days                     2\n",
              "1609  1621             2021-08-07  ...        218 days                     3\n",
              "1610  1622             2021-07-29  ...        209 days                     3\n",
              "1611  1623             2021-07-31  ...        211 days                     3\n",
              "1612  1624             2021-08-11  ...        222 days                     3\n",
              "\n",
              "[1613 rows x 14 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Os3YCfJIISsz",
        "outputId": "f06b2d9f-6263-4154-f99d-c27462b09a52"
      },
      "source": [
        "casos_2021[\"DATA SINAIS E SINTOMAS\"].min()"
      ],
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Timestamp('2021-01-01 00:00:00')"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gm3TbvGeJADQ",
        "outputId": "5cc6aa36-bdb6-48ac-916f-f0ecfc78d2dc"
      },
      "source": [
        "casos_2021[\"DATA SINAIS E SINTOMAS\"]"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      2021-03-20\n",
              "1      2021-06-01\n",
              "2      2021-06-01\n",
              "3      2021-06-01\n",
              "4      2021-01-25\n",
              "          ...    \n",
              "1608   2021-05-05\n",
              "1609   2021-08-07\n",
              "1610   2021-07-29\n",
              "1611   2021-07-31\n",
              "1612   2021-08-11\n",
              "Name: DATA SINAIS E SINTOMAS, Length: 1613, dtype: datetime64[ns]"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 323
        },
        "id": "i1n64wjaLv8k",
        "outputId": "fc05d6b9-8353-49a9-c07e-e058ff8db6c8"
      },
      "source": [
        "df.sample(5)"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1215</th>\n",
              "      <td>1223</td>\n",
              "      <td>2021-05-24</td>\n",
              "      <td>21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BAIRRO NOVO</td>\n",
              "      <td>405</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>F</td>\n",
              "      <td>65.180556</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>143 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1180</th>\n",
              "      <td>1188</td>\n",
              "      <td>2021-04-25</td>\n",
              "      <td>17</td>\n",
              "      <td>NaN</td>\n",
              "      <td>JARDIM FRAGOSO</td>\n",
              "      <td>553</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>28.516667</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>114 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1326</th>\n",
              "      <td>1335</td>\n",
              "      <td>2021-07-16</td>\n",
              "      <td>28</td>\n",
              "      <td>AMAURY COUTINHO</td>\n",
              "      <td>JARDIM BRASIL</td>\n",
              "      <td>20</td>\n",
              "      <td>NÃO</td>\n",
              "      <td>NÃO SE APLICA</td>\n",
              "      <td>M</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>196 days</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>566</td>\n",
              "      <td>2021-06-01</td>\n",
              "      <td>22</td>\n",
              "      <td>GETÚLIO VARGAS</td>\n",
              "      <td>OURO PRETO</td>\n",
              "      <td>125</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF JATOBÁ</td>\n",
              "      <td>F</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>151 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>215</td>\n",
              "      <td>2021-04-29</td>\n",
              "      <td>17</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>F</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>118 days</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Nº DATA SINAIS E SINTOMAS  ...  Diferença_Dias Trimestre_Notificados\n",
              "1215  1223             2021-05-24  ...        143 days                     2\n",
              "1180  1188             2021-04-25  ...        114 days                     2\n",
              "1326  1335             2021-07-16  ...        196 days                     3\n",
              "564    566             2021-06-01  ...        151 days                     2\n",
              "214    215             2021-04-29  ...        118 days                     2\n",
              "\n",
              "[5 rows x 14 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DJqj-RQRLsPg",
        "outputId": "49f0731e-2e52-46aa-d23f-7fd9e0683330"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Nº                           0\n",
              "DATA SINAIS E SINTOMAS       0\n",
              "SE                           0\n",
              "UNIDADE NOTIFICADORA       794\n",
              "BAIRRO                      77\n",
              "NU_NUMERO                  760\n",
              "ÁREA CCOBERTA POR USF      803\n",
              "SE SIM, QUAL USF?          803\n",
              "SEXO                       239\n",
              "IDADE                      243\n",
              "NOTIFICADOS                  0\n",
              "Unnamed: 11               1607\n",
              "Diferença_Dias               0\n",
              "Trimestre_Notificados        0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jub5D3jGXJra"
      },
      "source": [
        "#Eleiminando os valores vazio da plamilha, e implatando na memoria com inplace esse novo valor:\n",
        "df[\"UNIDADE NOTIFICADORA\"].fillna(0, inplace=True)"
      ],
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "biAlob6yZ8St"
      },
      "source": [
        "df[\"ÁREA CCOBERTA POR USF\"].fillna(0, inplace=True)"
      ],
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "edHMtctxb7D7"
      },
      "source": [
        "df[\"NU_NUMERO\"].fillna(0, inplace=True)"
      ],
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hYoaLnLrcCSg"
      },
      "source": [
        "df[\"SE SIM, QUAL USF?\"].fillna(0, inplace=True)"
      ],
      "execution_count": 73,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wfs-cLyGcKav"
      },
      "source": [
        "df[\"SEXO \"].fillna(0, inplace=True)"
      ],
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aD3Z8KAqcVlJ"
      },
      "source": [
        "df[\"IDADE\"].fillna(0, inplace=True)"
      ],
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pmQVpKiOcalY"
      },
      "source": [
        "df[\"Unnamed: 11\"].fillna(0, inplace=True)"
      ],
      "execution_count": 76,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wp0OQ0CJckQC"
      },
      "source": [
        "df[\"BAIRRO \"].fillna(0, inplace=True)"
      ],
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5-NY1g77YTP4",
        "outputId": "d083adab-d273-4999-cf1b-148247323522"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Nº                        0\n",
              "DATA SINAIS E SINTOMAS    0\n",
              "SE                        0\n",
              "UNIDADE NOTIFICADORA      0\n",
              "BAIRRO                    0\n",
              "NU_NUMERO                 0\n",
              "ÁREA CCOBERTA POR USF     0\n",
              "SE SIM, QUAL USF?         0\n",
              "SEXO                      0\n",
              "IDADE                     0\n",
              "NOTIFICADOS               0\n",
              "Unnamed: 11               0\n",
              "Diferença_Dias            0\n",
              "Trimestre_Notificados     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "pxF5Rdb_FS32",
        "outputId": "56a9e749-d199-46c1-890a-a4564fe2b9db"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>SE</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1613.000000</td>\n",
              "      <td>1613.000000</td>\n",
              "      <td>1613.000000</td>\n",
              "      <td>1613.0</td>\n",
              "      <td>1613</td>\n",
              "      <td>1613.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>810.741476</td>\n",
              "      <td>20.579665</td>\n",
              "      <td>28.014941</td>\n",
              "      <td>1.0</td>\n",
              "      <td>142 days 00:25:53.378797272</td>\n",
              "      <td>2.056417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>469.441582</td>\n",
              "      <td>5.906373</td>\n",
              "      <td>22.729606</td>\n",
              "      <td>0.0</td>\n",
              "      <td>41 days 08:05:46.231255287</td>\n",
              "      <td>0.494301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0 days 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>404.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>128 days 00:00:00</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>809.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>148 days 00:00:00</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1217.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>166 days 00:00:00</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1624.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>121.538889</td>\n",
              "      <td>1.0</td>\n",
              "      <td>224 days 00:00:00</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                Nº  ...  Trimestre_Notificados\n",
              "count  1613.000000  ...            1613.000000\n",
              "mean    810.741476  ...               2.056417\n",
              "std     469.441582  ...               0.494301\n",
              "min       1.000000  ...               1.000000\n",
              "25%     404.000000  ...               2.000000\n",
              "50%     809.000000  ...               2.000000\n",
              "75%    1217.000000  ...               2.000000\n",
              "max    1624.000000  ...               3.000000\n",
              "\n",
              "[8 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T5lTUnC8vnH5"
      },
      "source": [
        "#Criando coluna de mês:\n",
        "df[\"Mês\"] = df[\"DATA SINAIS E SINTOMAS\"].dt.month"
      ],
      "execution_count": 160,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "dlAsvX2pwD2r",
        "outputId": "8535ea38-9d4d-495d-b97c-81b000b2d62b"
      },
      "source": [
        "df.sample(6)"
      ],
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Nº</th>\n",
              "      <th>DATA SINAIS E SINTOMAS</th>\n",
              "      <th>SE</th>\n",
              "      <th>UNIDADE NOTIFICADORA</th>\n",
              "      <th>BAIRRO</th>\n",
              "      <th>NU_NUMERO</th>\n",
              "      <th>ÁREA CCOBERTA POR USF</th>\n",
              "      <th>SE SIM, QUAL USF?</th>\n",
              "      <th>SEXO</th>\n",
              "      <th>IDADE</th>\n",
              "      <th>NOTIFICADOS</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Diferença_Dias</th>\n",
              "      <th>Trimestre_Notificados</th>\n",
              "      <th>Mês</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>642</th>\n",
              "      <td>644</td>\n",
              "      <td>2021-06-10</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>SAPUCAIA</td>\n",
              "      <td>415</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>160 days</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>612</th>\n",
              "      <td>614</td>\n",
              "      <td>2021-06-05</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>SANTA TEREZA</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>52.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>155 days</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1419</th>\n",
              "      <td>1430</td>\n",
              "      <td>2021-05-28</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>SALGADINHO</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>147 days</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1010</th>\n",
              "      <td>1016</td>\n",
              "      <td>2021-05-05</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>CAIXA D' ÁGUA</td>\n",
              "      <td>161</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>46.933333</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>124 days</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2021-01-25</td>\n",
              "      <td>4</td>\n",
              "      <td>SPAO</td>\n",
              "      <td>PASSARINHO</td>\n",
              "      <td>0</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF PASSARINHO</td>\n",
              "      <td>F</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24 days</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>918</th>\n",
              "      <td>923</td>\n",
              "      <td>2021-06-17</td>\n",
              "      <td>24</td>\n",
              "      <td>UPAO</td>\n",
              "      <td>JARDIM FRAGOSO</td>\n",
              "      <td>258</td>\n",
              "      <td>SIM</td>\n",
              "      <td>ESF JARDIM FRAGOSO I</td>\n",
              "      <td>F</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>167 days</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Nº DATA SINAIS E SINTOMAS  ...  Trimestre_Notificados Mês\n",
              "642    644             2021-06-10  ...                      2   6\n",
              "612    614             2021-06-05  ...                      2   6\n",
              "1419  1430             2021-05-28  ...                      2   5\n",
              "1010  1016             2021-05-05  ...                      2   5\n",
              "4        5             2021-01-25  ...                      1   1\n",
              "918    923             2021-06-17  ...                      2   6\n",
              "\n",
              "[6 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nSCnm6aC_23L",
        "outputId": "2a82ef20-f888-459c-af26-aed72502de73"
      },
      "source": [
        "#Casos notificados dos bairros por mês:\n",
        "df.groupby(\"Mês\")[\"NOTIFICADOS\"].sum().sort_values(ascending=False).head(10)"
      ],
      "execution_count": 164,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Mês\n",
              "5    584\n",
              "6    505\n",
              "7    228\n",
              "4    125\n",
              "1     55\n",
              "3     52\n",
              "2     47\n",
              "8     17\n",
              "Name: NOTIFICADOS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 164
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "eHekDVDoywPx",
        "outputId": "a2bd6bea-2e21-4642-95ff-1507d16fcbcd"
      },
      "source": [
        "#Casos notificados dos bairros por mês:\n",
        "df.groupby(\"Mês\")[\"NOTIFICADOS\"].sum().sort_values(ascending=False).head(10).plot.pie(title = 'Notificados por Bairro' )\n",
        "plt.savefig(\"Casos notificados dos bairros por mês.png\")"
      ],
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}